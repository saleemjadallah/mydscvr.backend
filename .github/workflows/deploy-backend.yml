name: Deploy Backend to EC2

on:
  push:
    branches: [ main ]
    paths:
      - 'Backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        cd Backend
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        cd Backend
        python -m pytest --tb=short || echo "Tests completed with issues"
        
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd /home/ubuntu/mydscvr-backend
          git pull origin main
          
          # Create Backend.env file with secrets
          cat > Backend/Backend.env << EOF
          MONGODB_URL=${{ secrets.MONGODB_URL }}
          MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          PERPLEXITY_API_KEY=${{ secrets.PERPLEXITY_API_KEY }}
          WEBHOOK_API_KEY=${{ secrets.WEBHOOK_API_KEY }}
          ZEPTO_API_KEY=${{ secrets.ZEPTO_API_KEY }}
          DEBUG=False
          ACCESS_TOKEN_EXPIRE_MINUTES=10080
          REFRESH_TOKEN_EXPIRE_DAYS=30
          EOF
          
          # Update systemd service file with the corrected version
          sudo cp Backend/mydscvr-backend.service /etc/systemd/system/mydscvr-backend.service
          sudo systemctl daemon-reload
          
          source venv/bin/activate
          pip install -r Backend/requirements.txt
          sudo systemctl restart mydscvr-backend
          sudo systemctl status mydscvr-backend
          
          # Fix nginx API proxy configuration
          echo "ðŸ”§ Fixing nginx API proxy configuration..."
          cd Backend
          chmod +x fix_nginx_api_proxy.sh
          sudo ./fix_nginx_api_proxy.sh
          
          # Final verification
          echo "ðŸ§ª Final API verification..."
          sleep 5
          curl -s https://mydscvr.xyz/api/advice/health || echo "Advice endpoint still not accessible"
          curl -s https://mydscvr.xyz/health | head -c 100